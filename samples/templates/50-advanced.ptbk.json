{
    "title": "âœ¨ Sample: Language Capabilities",
    "pipelineUrl": "https://promptbook.studio/samples/advanced.ptbk.md",
    "promptbookVersion": "1.0.0",
    "description": "Trying the language capabilities of GPT models.",
    "parameters": [
        {
            "name": "word",
            "description": "The word to use in the prompt.",
            "isInput": true,
            "isOutput": false
        },
        {
            "name": "comparisonOfTwoSentences",
            "description": "Comparison between two sentences",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "summary",
            "description": "The overall summary of the comparison",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "wordSynonymTested",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "wordSynonym",
            "isInput": false,
            "isOutput": false
        },
        {
            "name": "sentenceWithTwoSynonyms",
            "description": "Sentence with word and wordSynonym",
            "isInput": false,
            "isOutput": false
        },
        {
            "name": "sentenceWithOriginalWordRemoved",
            "description": "Sentence with both synomyms but without a original word",
            "isInput": false,
            "isOutput": false
        }
    ],
    "promptTemplates": [
        {
            "name": "synonym",
            "title": "ðŸ’¬ Synonym",
            "description": "Synonym for word",
            "dependentParameterNames": [
                "word"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "postprocessing": [
                "unwrapResult"
            ],
            "expectations": {
                "words": {
                    "min": 1,
                    "max": 1
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "content": "Write synonym for \"{word}\"",
            "resultingParameterName": "wordSynonym"
        },
        {
            "name": "test-that-word-is-not-original-word",
            "title": "âš™ Test that word is not original word",
            "dependentParameterNames": [
                "word",
                "wordSynonym"
            ],
            "blockType": "SCRIPT",
            "contentLanguage": "javascript",
            "content": "if (word !== '' && wordSynonym === word) {\n    throw new Error(`Synonym returned from LLM is same as original word \"${word}\"`);\n}\n\nreturn wordSynonym;",
            "resultingParameterName": "wordSynonymTested"
        },
        {
            "name": "sentence-with-synonym",
            "title": "ðŸ’¬ Sentence with Synonym",
            "description": "Sentence with word and wordSynonym",
            "dependentParameterNames": [
                "word",
                "wordSynonym"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "expectations": {
                "words": {
                    "max": 20
                },
                "sentences": {
                    "min": 1,
                    "max": 1
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "content": "Write sentence with \"{word}\" and \"{wordSynonym}\" in it",
            "resultingParameterName": "sentenceWithTwoSynonyms"
        },
        {
            "name": "sentence-without-original-word",
            "title": "ðŸ’¬ Sentence without original word",
            "description": "Sentence \"{sentenceWithTwoSynonyms}\" without \"{word}\".",
            "dependentParameterNames": [
                "sentenceWithTwoSynonyms",
                "word"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "expectations": {
                "words": {
                    "max": 20
                },
                "sentences": {
                    "min": 1,
                    "max": 1
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "content": "Remove word \"{word}\" from sentence and modify it so that it makes sense:\n\n## Rules:\n\n-   Sentence must be grammatically correct\n-   Sentence must make sense after removing the word\n\n## The Sentence:\n\n> {sentenceWithTwoSynonyms}",
            "resultingParameterName": "sentenceWithOriginalWordRemoved"
        },
        {
            "name": "comparison",
            "title": "ðŸ’¬ Comparison",
            "description": "Comparison between \"{sentenceWithTwoSynonyms}\" and \"{sentenceWithOriginalWordRemoved}\".",
            "dependentParameterNames": [
                "sentenceWithTwoSynonyms",
                "sentenceWithOriginalWordRemoved"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "expectations": {
                "sentences": {
                    "min": 1,
                    "max": 5
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-4o"
            },
            "content": "Write a short comparison of the meaning of the two sentences, writing a maximum of 5 sentences:\n\n## Sentence 1:\n\n> {sentenceWithTwoSynonyms}\n\n## Sentence 2:\n\n> {sentenceWithOriginalWordRemoved}",
            "resultingParameterName": "comparisonOfTwoSentences"
        },
        {
            "name": "summary",
            "title": "ðŸ”— Summary",
            "dependentParameterNames": [
                "word",
                "wordSynonym",
                "sentenceWithTwoSynonyms",
                "sentenceWithOriginalWordRemoved",
                "comparisonOfTwoSentences"
            ],
            "blockType": "SIMPLE_TEMPLATE",
            "content": "You have entered a word **{word}**. For this word the best synonym is **{wordSynonym}**. The sentence with both words is **{sentenceWithTwoSynonyms}**. The sentence without the original word is **{sentenceWithOriginalWordRemoved}**. And the comparison between the two sentences is:\n\n> {comparisonOfTwoSentences}",
            "resultingParameterName": "summary"
        }
    ],
    "knowledge": [
        {
            "name": "e",
            "title": "E",
            "content": "I",
            "keywords": [
                "D"
            ],
            "index": [
                {
                    "modelName": "mocked-facked",
                    "position": [
                        -0.8883824868024606,
                        -0.6020321746200104,
                        -0.9393741530532278,
                        -0.11002128864944272,
                        0.3574893138512927,
                        -0.5869817948357818,
                        -0.46392873161577564,
                        -0.30633851090576014,
                        0.9789426038985036,
                        -0.9134100241893721,
                        -0.7808339797583361,
                        0.9833929341079228,
                        -0.7152915544454097,
                        -0.12105020025223023,
                        -0.5133048494023682,
                        -0.41006779176071184,
                        -0.9108060611017832,
                        -0.11725611976835815,
                        0.2264098892254438,
                        0.3286038097320585,
                        0.32833590819696434,
                        -0.5958587641807758,
                        0.7177351139361723,
                        0.7654342740931517,
                        0.22865740152984326
                    ]
                }
            ],
            "sources": [
                {
                    "title": "Markdown document",
                    "href": "#"
                }
            ]
        }
    ]
}
