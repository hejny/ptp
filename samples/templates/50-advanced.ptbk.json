{
    "title": "âœ¨ Sample: Language Capabilities",
    "pipelineUrl": "https://promptbook.studio/samples/advanced.ptbk.md",
    "promptbookVersion": "1.0.0",
    "description": "Trying the language capabilities of GPT models.",
    "parameters": [
        {
            "name": "word",
            "description": "The word to use in the prompt.",
            "isInput": true,
            "isOutput": false
        },
        {
            "name": "comparisonOfTwoSentences",
            "description": "Comparison between two sentences",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "summary",
            "description": "The overall summary of the comparison",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "wordSynonymTested",
            "isInput": false,
            "isOutput": true
        },
        {
            "name": "wordSynonym",
            "isInput": false,
            "isOutput": false
        },
        {
            "name": "sentenceWithTwoSynonyms",
            "description": "Sentence with word and wordSynonym",
            "isInput": false,
            "isOutput": false
        },
        {
            "name": "sentenceWithOriginalWordRemoved",
            "description": "Sentence with both synomyms but without a original word",
            "isInput": false,
            "isOutput": false
        }
    ],
    "promptTemplates": [
        {
            "name": "synonym",
            "title": "ðŸ’¬ Synonym",
            "description": "Synonym for word",
            "dependentParameterNames": [
                "word"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "postprocessing": [
                "unwrapResult"
            ],
            "expectations": {
                "words": {
                    "min": 1,
                    "max": 1
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "content": "Write synonym for \"{word}\"",
            "resultingParameterName": "wordSynonym"
        },
        {
            "name": "test-that-word-is-not-original-word",
            "title": "âš™ Test that word is not original word",
            "dependentParameterNames": [
                "word",
                "wordSynonym"
            ],
            "blockType": "SCRIPT",
            "contentLanguage": "javascript",
            "content": "if (word !== '' && wordSynonym === word) {\n    throw new Error(`Synonym returned from LLM is same as original word \"${word}\"`);\n}\n\nreturn wordSynonym;",
            "resultingParameterName": "wordSynonymTested"
        },
        {
            "name": "sentence-with-synonym",
            "title": "ðŸ’¬ Sentence with Synonym",
            "description": "Sentence with word and wordSynonym",
            "dependentParameterNames": [
                "word",
                "wordSynonym"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "expectations": {
                "words": {
                    "max": 20
                },
                "sentences": {
                    "min": 1,
                    "max": 1
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "content": "Write sentence with \"{word}\" and \"{wordSynonym}\" in it",
            "resultingParameterName": "sentenceWithTwoSynonyms"
        },
        {
            "name": "sentence-without-original-word",
            "title": "ðŸ’¬ Sentence without original word",
            "description": "Sentence \"{sentenceWithTwoSynonyms}\" without \"{word}\".",
            "dependentParameterNames": [
                "sentenceWithTwoSynonyms",
                "word"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "expectations": {
                "words": {
                    "max": 20
                },
                "sentences": {
                    "min": 1,
                    "max": 1
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-3.5-turbo"
            },
            "content": "Remove word \"{word}\" from sentence and modify it so that it makes sense:\n\n## Rules:\n\n-   Sentence must be grammatically correct\n-   Sentence must make sense after removing the word\n\n## The Sentence:\n\n> {sentenceWithTwoSynonyms}",
            "resultingParameterName": "sentenceWithOriginalWordRemoved"
        },
        {
            "name": "comparison",
            "title": "ðŸ’¬ Comparison",
            "description": "Comparison between \"{sentenceWithTwoSynonyms}\" and \"{sentenceWithOriginalWordRemoved}\".",
            "dependentParameterNames": [
                "sentenceWithTwoSynonyms",
                "sentenceWithOriginalWordRemoved"
            ],
            "blockType": "PROMPT_TEMPLATE",
            "expectations": {
                "sentences": {
                    "min": 1,
                    "max": 5
                }
            },
            "modelRequirements": {
                "modelVariant": "CHAT",
                "modelName": "gpt-4o"
            },
            "content": "Write a short comparison of the meaning of the two sentences, writing a maximum of 5 sentences:\n\n## Sentence 1:\n\n> {sentenceWithTwoSynonyms}\n\n## Sentence 2:\n\n> {sentenceWithOriginalWordRemoved}",
            "resultingParameterName": "comparisonOfTwoSentences"
        },
        {
            "name": "summary",
            "title": "ðŸ”— Summary",
            "dependentParameterNames": [
                "word",
                "wordSynonym",
                "sentenceWithTwoSynonyms",
                "sentenceWithOriginalWordRemoved",
                "comparisonOfTwoSentences"
            ],
            "blockType": "SIMPLE_TEMPLATE",
            "content": "You have entered a word **{word}**. For this word the best synonym is **{wordSynonym}**. The sentence with both words is **{sentenceWithTwoSynonyms}**. The sentence without the original word is **{sentenceWithOriginalWordRemoved}**. And the comparison between the two sentences is:\n\n> {comparisonOfTwoSentences}",
            "resultingParameterName": "summary"
        }
    ],
    "knowledge": [
        {
            "name": "a",
            "title": "A",
            "content": "Q",
            "keywords": [
                "L"
            ],
            "index": [
                {
                    "modelName": "mocked-facked",
                    "position": [
                        0.31667254790827437,
                        0.29330792354515145,
                        -0.1851166735369456,
                        0.4654146342940053,
                        -0.926169430198537,
                        -0.14616039426176197,
                        0.8672882423075676,
                        -0.9168692744075511,
                        0.8946531034481349,
                        0.27493080039647033,
                        -0.9402290973024101,
                        -0.9323147123221953,
                        -0.025644194593772873,
                        0.005835284134580121,
                        -0.8442061096649391,
                        -0.09901168931576887,
                        -0.8987392370301488,
                        0.8552242835136958,
                        -0.910980095602056,
                        -0.6782427288204538,
                        0.8711127767268212,
                        0.6026346791060386,
                        -0.8261830316767131,
                        -0.4954639416817095,
                        -0.5472496903073143
                    ]
                }
            ],
            "sources": [
                {
                    "title": "Markdown document",
                    "href": "#"
                }
            ]
        }
    ]
}
